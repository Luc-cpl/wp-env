name: "Publish to Docker"
description: "Pushes built artifacts to Docker"

inputs:
  docker_username:
    description: Username for Docker Hub account
    required: true
  docker_token:
    description: Token for Docker Hub account
    required: true
  image_registry:
    description: Registry to push images to
    required: true
  image_repository:
    description: Repository to push images to
    required: true
  image_tag:
    description: Tag to apply to images
    required: true
  image_latest:
    description: Apply the latest tag to the image
    required: true
  context:
    description: Path to Dockerfile
    required: true
  file:
    description: Path to Dockerfile
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.docker_username }}
        password: ${{ inputs.docker_token }}

    - name: Prepare
      id: prep
      shell: bash
      env:
        REGISTRY: ${{ inputs.image_registry }}
        REPOSITORY: ${{ inputs.image_repository }}
        TAG: ${{ inputs.image_tag }}
      run: |
        IMAGE="$REGISTRY/$REPOSITORY"
        echo "IMAGE=${IMAGE}" >> $GITHUB_OUTPUT
        echo "TAG=${TAG}" >> $GITHUB_OUTPUT
        echo "TAGGED_IMAGE=${IMAGE}:${TAG}" >> $GITHUB_OUTPUT
        if [ "${{ inputs.image_latest }}" = "true" ]; then
          echo "TAGGED_IMAGE=${IMAGE}:${TAG},${IMAGE}:latest" >> $GITHUB_OUTPUT
        fi

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        push: true
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        platforms: linux/amd64, linux/arm64
        tags: ${{ steps.prep.outputs.TAGGED_IMAGE }}
        cache-from: type=gha
        cache-to: type=gha,mode=max