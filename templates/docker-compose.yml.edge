version: "3.8"

services:
  wp:
    build:
      context: {{root}}docker/wordpress
      dockerfile: Dockerfile
    user: "${UID}:${GID}"
    environment:
      SERVER_NAME: "{{host}}"
      WORDPRESS_DB_HOST: "database"
      WORDPRESS_DB_NAME: "wordpress"
      WORDPRESS_DB_PASSWORD: ""
      WORDPRESS_DB_USER: "root"
    depends_on:
      - "database"
    ports:
      - 80:80
      - 443:443
    restart: "unless-stopped"
    volumes:
      - "wp:/var/www/html:rw"
      @each(bind in plugins)
      - "{{bind.host}}:/var/www/html/wp-content/plugins/{{bind.container}}:ro"
      @end
      @each(bind in themes)
      - "{{bind.host}}:/var/www/html/wp-content/themes/{{bind.container}}:ro"
      @end
      @each(bind in volumes)
      - "{{bind.host}}:${{bind.container}}:ro"
      @end

  wp-test:
    build:
      context: {{root}}docker/wordpress
      dockerfile: Dockerfile
    user: "${UID}:${GID}"
    environment:
      SERVER_NAME: "test.{{host}}"
      WORDPRESS_DB_HOST: "database-test"
      WORDPRESS_DB_NAME: "wordpress"
      WORDPRESS_DB_PASSWORD: ""
      WORDPRESS_DB_USER: "root"
    depends_on:
      - "database-test"
    restart: "unless-stopped"
    volumes:
      - "wp-test:/var/www/html:rw"
      @each(bind in plugins)
      - "{{bind.host}}:/var/www/html/wp-content/plugins/{{bind.container}}:ro"
      @end
      @each(bind in themes)
      - "{{bind.host}}:/var/www/html/wp-content/themes/{{bind.container}}:ro"
      @end
      @each(bind in volumes)
      - "{{bind.host}}:${{bind.container}}:ro"
      @end

  wp-cli:
    build:
      context: {{root}}docker/wordpress-cli
      dockerfile: Dockerfile
    user: "${UID}:${GID}"
    command: sleep infinity
    environment:
      VIRTUAL_HOST: "${DOCKER_DEV_DOMAIN:-project.test}"
      WORDPRESS_DB_HOST: "database"
      WORDPRESS_DB_NAME: "wordpress"
      WORDPRESS_DB_PASSWORD: ""
      WORDPRESS_DB_USER: "root"
    depends_on:
      - "wp"
    restart: "unless-stopped"
    volumes:
      - "wp:/var/www/html:rw"
      @each(bind in plugins)
      - "{{bind.host}}:/var/www/html/wp-content/plugins/{{bind.container}}"
      @end
      @each(bind in themes)
      - "{{bind.host}}:/var/www/html/wp-content/themes/{{bind.container}}"
      @end
      @each(bind in volumes)
      - "{{bind.host}}:${{bind.container}}"
      @end

  wp-test-cli:
    build:
      context: {{root}}docker/wordpress-cli
      dockerfile: Dockerfile
    user: "${UID}:${GID}"
    command: >
      sh -c "
        install-wp-tests && sleep infinity
      "
    environment:
      VIRTUAL_HOST: "${DOCKER_DEV_DOMAIN:-project.test}"
      WORDPRESS_DB_HOST: "database-test"
      WORDPRESS_DB_NAME: "wordpress"
      WORDPRESS_DB_PASSWORD: ""
      WORDPRESS_DB_USER: "root"
      @if(multisite)
      WP_TESTS_MULTISITE: {{multisite}}
      @endif
    depends_on:
      - "wp-test"
    {{--  restart: "unless-stopped"  --}}
    volumes:
      - "wp-test:/var/www/html:rw"
      @each(bind in plugins)
      - "{{bind.host}}:/var/www/html/wp-content/plugins/{{bind.container}}"
      @end
      @each(bind in themes)
      - "{{bind.host}}:/var/www/html/wp-content/themes/{{bind.container}}"
      @end
      @each(bind in volumes)
      - "{{bind.host}}:${{bind.container}}"
      @end

  database:
    image: "mariadb"
    volumes:
      - "database:/var/lib/mysql"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "wordpress"
      MYSQL_ROOT_PASSWORD: ""    
    restart: "unless-stopped"

  database-test:
    image: "mariadb"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: "wordpress"
      MYSQL_ROOT_PASSWORD: ""    
    restart: "unless-stopped"

volumes:
  wp:
  wp-test:
  database: